{"version":3,"sources":["components/Gallery/ImagesColumn.js","components/Gallery/index.js","App.js","index.js"],"names":["ImagesColumn","_ref","images","react_default","a","createElement","className","map","image","src","webformatURL","alt","API_KEY","index","state","searchTerm","gallery","getImages","axios","get","concat","_this","then","response","_","chunk","data","hits","setState","catch","error","console","log","handleChange","e","target","value","this","length","Fragment","type","placeholder","id","onChange","onClick","Gallery_ImagesColumn","Component","App","Gallery","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wRAYeA,EAVM,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZJ,EAAOK,IAAI,SAAAC,GACV,OAAOL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,EAAME,aAAcC,IAAI,kBCA3CC,SAAU,sCAyDDC,6MAtDbC,MAAQ,CACNC,WAAY,QACZC,QAAS,MAOXC,UAAY,WACVC,IACGC,IADH,gCAAAC,OAEoCR,EAFpC,OAAAQ,OAGMC,EAAKP,MAAMC,WAHjB,8CAMGO,KAAK,SAAAC,GACJ,IAAMrB,EAASsB,IAAEC,MAAMF,EAASG,KAAKC,KAAM,IAC3CN,EAAKO,SAAS,CAAEZ,QAASd,MAE1B2B,MAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIlBG,aAAe,SAAAC,GACbb,EAAKO,SAAS,CAAEb,WAAYmB,EAAEC,OAAOC,4FApBrCC,KAAKpB,6CAuBE,IACCD,EAAYqB,KAAKvB,MAAjBE,QACR,OAAKA,EAAQsB,OAEXnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACEmC,KAAK,OACLC,YAAY,sBACZC,GAAG,SACHC,SAAUN,KAAKJ,eAEjB9B,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,SAASJ,MAAM,WAAWQ,QAASP,KAAKpB,aAEtDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwC,EAAD,CAAc3C,OAAQc,EAAQ,KAC9Bb,EAAAC,EAAAC,cAACwC,EAAD,CAAc3C,OAAQc,EAAQ,KAC9Bb,EAAAC,EAAAC,cAACwC,EAAD,CAAc3C,OAAQc,EAAQ,KAC9Bb,EAAAC,EAAAC,cAACwC,EAAD,CAAc3C,OAAQc,EAAQ,OAhBRb,EAAAC,EAAAC,cAAA,+BAhCZyC,aCELC,0LAJX,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,aAFOF,cCAlBG,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.63de0689.chunk.js","sourcesContent":["import React from 'react';\n\nconst ImagesColumn = ({ images }) => {\n  return (\n    <div className=\"column\">\n      {images.map(image => {\n        return <img src={image.webformatURL} alt=\"someimage\" />;\n      })}\n    </div>\n  );\n};\n\nexport default ImagesColumn;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport ImagesColumn from './ImagesColumn';\nimport './gallery.css';\n\nconst API_KEY = '12064203-ee9b61324fe2e8a0947cc68d2';\n\nclass index extends Component {\n  state = {\n    searchTerm: 'happy',\n    gallery: []\n  };\n\n  componentDidMount() {\n    this.getImages();\n  }\n\n  getImages = () => {\n    axios\n      .get(\n        `https://pixabay.com/api/?key=${API_KEY}&q=${\n          this.state.searchTerm\n        }&image_type=photo&pretty=true&per_page=40`\n      )\n      .then(response => {\n        const images = _.chunk(response.data.hits, 10);\n        this.setState({ gallery: images });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleChange = e => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  render() {\n    const { gallery } = this.state;\n    if (!gallery.length) return <div>Loading..</div>;\n    return (\n      <>\n        <div className=\"topnav\">\n          <input\n            type=\"text\"\n            placeholder=\"Search for images..\"\n            id=\"search\"\n            onChange={this.handleChange}\n          />\n          <input type=\"button\" value=\"Let's go\" onClick={this.getImages} />\n        </div>\n        <div className=\"row\">\n          <ImagesColumn images={gallery[0]} />\n          <ImagesColumn images={gallery[1]} />\n          <ImagesColumn images={gallery[2]} />\n          <ImagesColumn images={gallery[3]} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default index;\n","import React, { Component } from 'react';\nimport Gallery from './components/Gallery';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return <Gallery />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}